[
 {
  "type": "free-text",
  "taskId": "free-text-3657199918",
  "source": {
   "name": "Exercise 1.1.1",
   "showName": true,
   "instructions": "In computer jargon, what's the difference between a *statement* and a *comment*?",
   "guidance": "While a statement is a line of code that performs a basic action, a comment is a bit of English text that explains a statement or set of statements. ",
   "showGuidanceAfterResponse": true,
   "previewType": "NONE",
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "points": 20,
   "rubrics": [],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Free Text"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-3293046330",
  "source": {
   "name": "Exercise 1.1.2",
   "showName": true,
   "instructions": "What does it mean to say that a program is *portable*?",
   "guidance": "A portable program can run on different kinds of computers with few or no modifications.",
   "showGuidanceAfterResponse": true,
   "previewType": "NONE",
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "points": 20,
   "rubrics": [],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Free Text"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-3590859974",
  "source": {
   "name": "Exercise 1.1.3",
   "showName": true,
   "instructions": "In common English, what does the word *compile* mean?",
   "guidance": "The dictionary definition of *compile* is to put something together from its parts. Similarly, in computer science compiling is when the computer reads the entire program and translates it completely into an executable -- language the computer understands -- before running it. ",
   "showGuidanceAfterResponse": true,
   "previewType": "NONE",
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "points": 20,
   "rubrics": [],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Free Text"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-1108820771",
  "source": {
   "name": "Exercise 1.1.4",
   "showName": true,
   "instructions": "What is an *executable*? Why is that word used as a noun?",
   "guidance": "An executable is the \"translated\" program that is produced by the compiler and run. It is a noun because it represents a specific program at a certain step in the process, rather than being used as an adjective to describe just any program. ",
   "showGuidanceAfterResponse": true,
   "previewType": "NONE",
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "points": 20,
   "rubrics": [],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Free Text"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-405612404",
  "source": {
   "name": "Exercise 5.4",
   "showName": true,
   "instructions": "Fill in the blanks based on the above code snippet. ",
   "showValues": false,
   "text": "`yes == no && grade > amount` --> <<<false>>>\n`amount == 40.0 || 50.0` --> <<<error>>>\n`hiVal != loVal || loVal < 0` --> <<<true>>>\n`True || hello.length() > 0` --> <<<true>>>\n`hello.isEmpty()` --> <<<false>>>\n`grade <= 100` --> <<<true>>>\n`!yes || no` --> <<<false>>>\n`grade > 75 > amount` --> <<<error>>>\n`amount <= hiVal` --> <<<true>>>\n`no` --> <<<false>>>",
   "distractors": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "points": 20,
   "arePartialPointsAllowed": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Fill in the Blanks"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": "",
   "tokens": {
    "blank": [
     "false",
     "error",
     "true",
     "true",
     "false",
     "true",
     "false",
     "error",
     "true",
     "false"
    ],
    "text": [
     "`yes == no && grade > amount` --> ",
     0,
     "\n`amount == 40.0 || 50.0` --> ",
     0,
     "\n`hiVal != loVal || loVal < 0` --> ",
     0,
     "\n`True || hello.length() > 0` --> ",
     0,
     "\n`hello.isEmpty()` --> ",
     0,
     "\n`grade <= 100` --> ",
     0,
     "\n`!yes || no` --> ",
     0,
     "\n`grade > 75 > amount` --> ",
     0,
     "\n`amount <= hiVal` --> ",
     0,
     "\n`no` --> ",
     0
    ],
    "regexPositions": []
   }
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-2095154106",
  "source": {
   "name": "Exercise 5.5",
   "showName": true,
   "instructions": "What is the output of the code?",
   "guidance": "true\ntrue\nping!\npong!",
   "showGuidanceAfterResponse": true,
   "previewType": "NONE",
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "points": 20,
   "rubrics": [],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Free Text"
     }
    ],
    "files": [
     "code/ch05/Hoopy.java"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/ch05/Hoopy.java"
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 }
]